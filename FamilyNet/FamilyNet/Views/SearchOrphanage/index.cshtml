@model IEnumerable<FamilyNet.Models.Orphanage>
@using System.Text

@{
    ViewData["Title"] = "searchorphanage";
    Layout = "~/Views/Shared/_Layout.cshtml";


}
<div id="map">

</div>

@section scripts{
    <script>

        const data = new Array(@Model.Count());


        @foreach (var item in Model.ToArray()) {

            var X = item.MapCoordX.ToString().Replace(',', '.');
            var Y = item.MapCoordY.ToString().Replace(',', '.');
            var title =new StringBuilder(item.Name);
            title.Append(" ");
            title.Append(item.Adress.City);
            title.Append(" ");
            title.Append(item.Adress.Street);
            title.Append(" ");
            title.Append(item.Adress.House);

            var Title = title.ToString();

<text>
        var x = { "loc":[@X, @Y], "title":"@Title"};
            data.push(x)
        </text>
    }


         var map = new L.Map('map', { zoom: 10, center: [48.46776, 35.04090]/*new L.latLng(data[0].loc)*/ });	//set center from first location

        map.addLayer(new L.TileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'));	//base layer

        var markersLayer = new L.LayerGroup();  //layer contain searched elements

            map.addLayer(markersLayer);

        var controlSearch = new L.Control.Search({
            position: 'topright',
            layer: markersLayer,
            initial: false,
            zoom: 12,
            marker: false
        });

        map.addControl(controlSearch);


        ////////////populate map with markers from sample data
        for (i in data) {
            var title = data[i].title,	//value searched
                loc = data[i].loc,		//position found
                marker = new L.Marker(new L.latLng(loc), { title: title });//se property searched
            marker.bindPopup(title);
            markersLayer.addLayer(marker);
        }
    </script>
}

<script src="~/res/External/leaflet/leaflet-search.js"></script>
<script src="~/res/scripts/main.js"></script>
<script src="~/lib/jquery/jquery.min.js"></script>


